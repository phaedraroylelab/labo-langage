{"version":3,"sources":["pages/Contact.js"],"names":["Contact","_data$contact","data","loading","error","useData","language","useLanguage","React","createElement","Container","className","contactData","contact","headers","Object","keys","renderContent","content","split","map","line","index","array","key","length","trim","Fragment","Form","onSubmit","async","event","preventDefault","formData","FormData","target","append","object","fromEntries","json","JSON","stringify","fetch","method","Accept","body","then","res","success","Swal","fire","title","text","icon","console","Group","controlId","Label","Control","name","type","placeholder","required","as","rows","Button","variant","fluid","style","backgroundColor","Row","Col","md","Card","Body","src","map_url","allowFullScreen","referrerPolicy"],"mappings":"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","file":"static/js/11.e25baf72.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container, Form, Button, Row, Col, Card } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { useData } from '../components/DataLoader';\r\nimport { useLanguage } from '../components/LanguageProvider';\r\n\r\n\r\nconst Contact = () => {\r\n  const { data, loading, error } = useData();\r\n  const {language} = useLanguage();\r\n\r\n  if (loading) return <Container className=\"my-5\"><h2>{language !== 'fr' ? 'Loading...' : 'Chargement...'}</h2></Container>;\r\n  if (error) return <Container className=\"my-5\"><h2>{language !== 'fr' ? 'Loading error' : 'Erreur de chargement'}</h2></Container>;\r\n\r\n  \r\n  // Get the first row of data and the headers\r\n  const contactData = data.contact?.[0] || {};\r\n  const headers = Object.keys(contactData || {});\r\n\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const formData = new FormData(event.target);\r\n    formData.append(\"access_key\", \"8901efb7-f355-4b35-b993-947bf8dd2cc8\");\r\n    const object = Object.fromEntries(formData);\r\n    const json = JSON.stringify(object);\r\n    \r\n    try {\r\n      const res = await fetch(\"https://api.web3forms.com/submit\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        },\r\n        body: json\r\n      }).then((res) => res.json());\r\n\r\n      if (res.success) {\r\n        Swal.fire({\r\n          title: language !== 'fr' ? \"Success!\" : \"Succès!\",\r\n          text:  language !== 'fr' ? \"The mail has been sent!\" : \"Le mail a été envoyé!\",\r\n          icon: \"success\"\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting form:\", error);\r\n      Swal.fire({\r\n        title: language !== 'fr' ? \"Error!\" : \"Erreur!\",\r\n        text: language !== 'fr' ? \"An error has occurred while sending the message\" : \"Une erreur est survenue lors de l'envoi du message.\",\r\n        icon: \"error\"\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  // Helper function to render content paragraphs\r\n  const renderContent = (content) => {\r\n    if (!content) return null;\r\n    return content.split('\\n').map((line, index, array) => (\r\n      <p key={index} className={index < array.length - 1 ? 'mb-1' : 'mb-0'}>\r\n        {line.trim()}\r\n      </p>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"my-5\">\r\n        <h1 className=\"mb-4\">{language !== 'fr' ? \"Contact us\" : \"Contactez-nous\"}</h1>\r\n        <br />\r\n        <Form onSubmit={onSubmit} className=\"mb-5\">\r\n          <Form.Group className=\"mb-3\" controlId=\"formName\">\r\n            <Form.Label>{language !== 'fr' ? \"Name\" : \"Nom\"}</Form.Label>\r\n            <Form.Control name=\"name\" type=\"text\" placeholder={language !== 'fr' ? \"Enter your name\" :\"Entrez votre nom\"} required />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n            <Form.Label>{language !== 'fr' ? \"Email address\" : \"Adresse email\"}</Form.Label>\r\n            <Form.Control name=\"email\" type=\"email\" placeholder={language !== 'fr' ? \"Enter your email\" :\"Entrez votre email\"} required />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formMessage\">\r\n            <Form.Label>Message</Form.Label>\r\n            <Form.Control name=\"message\" as=\"textarea\" rows={3} placeholder={language !== 'fr' ? \"Enter your message\" :\"Entrez votre message\"} required/>\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            {language !== 'fr' ? \"Send\" : \"Envoyer\"}\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n\r\n      <Container fluid className=\"my-5 p-0\" style={{ backgroundColor: '#F1F2FA' }}>\r\n        <Container className=\"my-5\">\r\n          <Row className=\"mb-5\">\r\n            <Col md={7}>\r\n              <br />\r\n              <br />\r\n              <h2>{language !== 'fr' ? \"How to find us\" : \"Où nous trouver\"} </h2>\r\n              <hr className=\"border-3 border-primary opacity-50\" />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={7}>\r\n\r\n              <Card className=\"border-0 shadow-sm mb-4\">\r\n                <Card.Body>\r\n                  <h2 className=\"h4 mb-4 text-primary\">{headers[0]}</h2>\r\n                  {renderContent(contactData[headers[0]])}\r\n                  \r\n                </Card.Body>\r\n              </Card>\r\n\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Card className=\"border-0 shadow-sm mb-4 h-100\">\r\n                    <Card.Body>\r\n                      {/* Address and Hours sections */}\r\n                      {[1, 2].map((index) => (\r\n                        <div key={headers[index]}>\r\n                          <h3 className=\"h4 mb-3 text-primary\">{headers[index]}</h3>\r\n                          {renderContent(contactData[headers[index]])}\r\n                          <br />\r\n                        </div>\r\n                      ))}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n\r\n                <Col md={6}>\r\n                  <Card className=\"border-0 shadow-sm mb-4 h-100\">\r\n                    <Card.Body>\r\n                      {/* Email and Phone sections */}\r\n                      {[3, 4].map((index) => (\r\n                        <div key={headers[index]}>\r\n                          <h3 className=\"h4 mb-3 text-primary\">{headers[index]}</h3>\r\n                          {renderContent(contactData[headers[index]])}\r\n                          <br />\r\n                        </div>\r\n                      ))}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n\r\n            <Col md={5} className=\"d-flex align-items-center\">\r\n              <div className=\"ratio ratio-1x1 h-60\">\r\n                <iframe \r\n                  src={contactData.map_url}\r\n                  className=\"border-0\"\r\n                  allowFullScreen=\"\"\r\n                  loading=\"lazy\"\r\n                  referrerPolicy=\"no-referrer-when-downgrade\"\r\n                  title=\"Location map\"\r\n                ></iframe>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <br />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;"],"sourceRoot":""}