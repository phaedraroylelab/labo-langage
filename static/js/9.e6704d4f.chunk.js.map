{"version":3,"sources":["pages/Team.js"],"names":["getColorFromName","name","colors","split","reduce","acc","char","charCodeAt","length","TeamMemberCard","_ref","member","isExpanded","onToggle","descriptionRef","useRef","hasOverflow","setHasOverflow","useState","imageLoaded","setImageLoaded","imageError","setImageError","language","useLanguage","useEffect","checkOverflow","current","element","scrollHeight","clientHeight","observer","ResizeObserver","observe","disconnect","description","React","createElement","Card","className","concat","onClick","e","Body","image_url","Fragment","src","url","includes","fileId","getImageUrl","alt","nom","onLoad","handleImageLoad","onError","handleImageError","style","display","opacity","transition","backgroundColor","ImageOff","size","map","word","join","toUpperCase","Title","personal_link","href","stopPropagation","target","rel","whiteSpace","ExternalLink","Subtitle","role","ref","maxHeight","overflow","Text","Team","data","loading","error","useData","expandedMember","setExpandedMember","Container","team","teamMembersByStatus","_member$actual","status","actual","trim","toLowerCase","push","categories","CategoryIcon","_ref2","Users","Archive","xxl","Accordion","defaultActiveKey","Object","entries","_ref3","members","Item","eventKey","key","Header","Row","index","Col","md"],"mappings":"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","file":"static/js/9.e6704d4f.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Container, Row, Col, Card, Accordion } from 'react-bootstrap';\r\nimport { ImageOff, ExternalLink, Users, Archive } from 'lucide-react';\r\nimport { useData } from '../components/DataLoader';\r\nimport './Team.css';\r\nimport { useLanguage } from '../components/LanguageProvider';\r\n\r\nconst getInitials = (name) => {\r\n  return name\r\n    .split(' ')\r\n    .map(word => word[0])\r\n    .join('')\r\n    .toUpperCase();\r\n};\r\n\r\nconst getColorFromName = (name) => {\r\n  const colors = [\r\n    '#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', \r\n    '#FFEEAD', '#D4A5A5', '#9B59B6', '#3498DB'\r\n  ];\r\n  const index = name.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\r\n  return colors[index % colors.length];\r\n};\r\n\r\nconst TeamMemberCard = ({ member, isExpanded, onToggle }) => {\r\n  const descriptionRef = useRef(null);\r\n  const [hasOverflow, setHasOverflow] = useState(false);\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n  const [imageError, setImageError] = useState(false);\r\n  const { language } = useLanguage();\r\n\r\n  useEffect(() => {\r\n    const checkOverflow = () => {\r\n      if (descriptionRef.current) {\r\n        const element = descriptionRef.current;\r\n        const hasOverflow = element.scrollHeight > element.clientHeight + 5;\r\n        setHasOverflow(!isExpanded && hasOverflow);\r\n      }\r\n    };\r\n\r\n    checkOverflow();\r\n    \r\n    const observer = new ResizeObserver(() => {\r\n      checkOverflow();\r\n    });\r\n\r\n    if (descriptionRef.current) {\r\n      observer.observe(descriptionRef.current);\r\n    }\r\n\r\n    return () => observer.disconnect();\r\n  }, [member.description, language, isExpanded]);\r\n\r\n  const handleCardClick = (e) => {\r\n    if (hasOverflow || isExpanded) {\r\n      onToggle();\r\n    }\r\n  };\r\n\r\n  const handleReadMoreClick = (e) => {\r\n    e.stopPropagation();\r\n    onToggle();\r\n  };\r\n\r\n  const getImageUrl = (url) => {\r\n    if (url && url.includes('drive.google.com')) {\r\n      if (url.includes('/file/d/')) {\r\n        const fileId = url.split('/file/d/')[1].split('/')[0];\r\n        return `https://drive.google.com/thumbnail?id=${fileId}&sz=s512`;\r\n      }\r\n    }\r\n    return url;\r\n  };\r\n\r\n  const handleImageLoad = () => {\r\n    setImageLoaded(true);\r\n    setImageError(false);\r\n  };\r\n\r\n  const handleImageError = () => {\r\n    setImageError(true);\r\n    setImageLoaded(false);\r\n  };\r\n\r\n  return (\r\n    <Card \r\n      className={`team-card ${isExpanded ? 'expanded' : ''}`}\r\n      onClick={handleCardClick}\r\n    >\r\n      <div className=\"team-overlay\"></div>\r\n      <Card.Body>\r\n        <div className=\"team-profile-container\">\r\n          {member.image_url ? (\r\n            <>\r\n              {!imageLoaded && !imageError && (\r\n                <div className=\"team-loading-placeholder\">\r\n                  Loading...\r\n                </div>\r\n              )}\r\n              <img\r\n                src={getImageUrl(member.image_url)}\r\n                alt={member.nom}\r\n                className={`team-profile-image ${imageLoaded ? 'visible' : 'hidden'}`}\r\n                onLoad={handleImageLoad}\r\n                onError={handleImageError}\r\n                style={{ \r\n                  display: imageError ? 'none' : 'block',\r\n                  opacity: imageLoaded ? 1 : 0,\r\n                  transition: 'opacity 0.3s ease'\r\n                }}\r\n              />\r\n              {imageError && (\r\n                <div\r\n                  className=\"team-initials-circle error-state\"\r\n                  style={{ backgroundColor: getColorFromName(member.nom) }}\r\n                >\r\n                  <ImageOff size={32} />\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <div\r\n              className=\"team-initials-circle\"\r\n              style={{ backgroundColor: getColorFromName(member.nom) }}\r\n            >\r\n              {getInitials(member.nom)}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <Card.Title>\r\n          {member.personal_link ? (\r\n            <a \r\n              href={member.personal_link}\r\n              onClick={(e) => e.stopPropagation()} \r\n              className=\"team-link\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <span style={{ whiteSpace: 'nowrap' }}>\r\n                {member.nom}\r\n                <ExternalLink className=\"inline-block\" size={14} />\r\n              </span>\r\n            </a>\r\n          ) : member.nom}\r\n        </Card.Title>\r\n        <Card.Subtitle className=\"text-muted\">{member.role}</Card.Subtitle>\r\n        {member.description && (\r\n          <div className=\"team-description-container\">\r\n            <div \r\n              ref={descriptionRef}\r\n              className={`team-description-fade ${!isExpanded && hasOverflow ? 'has-fade' : ''}`}\r\n              style={{ \r\n                maxHeight: isExpanded ? 'none' : '80px',\r\n                overflow: 'hidden'\r\n              }}\r\n            >\r\n              <Card.Text>\r\n                {member.description}\r\n              </Card.Text>\r\n            </div>\r\n            {hasOverflow && !isExpanded && (\r\n              <button\r\n                className=\"team-read-more-btn\"\r\n                onClick={handleReadMoreClick}\r\n              >\r\n                {language !== 'fr' ? 'Read more' : 'Lire la suite'}\r\n              </button>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nfunction Team() {\r\n  const { data, loading, error } = useData();\r\n  const [expandedMember, setExpandedMember] = useState(null);\r\n  const { language } = useLanguage();\r\n\r\n  if (loading) return <Container className=\"my-5\"><h2>{language !== 'fr' ? 'Loading...' : 'Chargement...'}</h2></Container>;\r\n  if (error) return <Container className=\"my-5\"><h2>{language !== 'fr' ? 'Loading error' : 'Erreur de chargement'}</h2></Container>;\r\n  if (!data.team || data.team.length === 0) return <Container className=\"my-5\"><h2>{language !== 'fr' ? 'No team member available' : 'Aucun membre disponible'}</h2></Container>;\r\n\r\n  // Group team members by 'actual' status\r\n  const teamMembersByStatus = data.team.reduce((acc, member) => {\r\n    const status = member.actual?.trim().toLowerCase() || 'actual';\r\n    if (!acc[status]) {\r\n      acc[status] = [];\r\n    }\r\n    acc[status].push(member);\r\n    return acc;\r\n  }, {});\r\n\r\n  // Define categories with multilingual support\r\n  const categories = {\r\n    'actual': language !== 'fr' ? 'Current Team Members' : 'Membres actuels',\r\n    'past': language !== 'fr' ? 'Past Team Members' : 'Anciens membres'\r\n  };\r\n\r\n  // Category icons\r\n  const CategoryIcon = ({ status }) => {\r\n    switch (status) {\r\n      case 'actual':\r\n        return <Users size={48} />;\r\n      case 'past':\r\n        return <Archive size={48} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Container className=\"my-5\">\r\n    <h1 className=\"mb-4\">{language !== 'fr' ? 'Our Team' : 'Nos Collaborateurs'}</h1>\r\n    </Container>\r\n    \r\n\r\n    <Container xxl className=\"my-5\">\r\n\r\n      \r\n      <Accordion className=\"team-accordion\" defaultActiveKey=\"actual\">\r\n        {Object.entries(teamMembersByStatus).map(([status, members]) => (\r\n          <Accordion.Item eventKey={status} key={status}>\r\n            <Accordion.Header>\r\n              <div className=\"category-header\">\r\n                <CategoryIcon status={status} />\r\n                <span>{categories[status] || status}</span>\r\n                <span className=\"ms-2 text-muted\">({members.length})</span>\r\n              </div>\r\n            </Accordion.Header>\r\n            <Accordion.Body>\r\n              <Row>\r\n                {members.map((member, index) => (\r\n                  <Col md={4} key={index} className=\"mb-4\">\r\n                    <TeamMemberCard\r\n                      member={member}\r\n                      isExpanded={expandedMember === `${status}-${index}`}\r\n                      onToggle={() => setExpandedMember(\r\n                        expandedMember === `${status}-${index}` ? null : `${status}-${index}`\r\n                      )}\r\n                    />\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n        ))}\r\n      </Accordion>\r\n    </Container>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Team;"],"sourceRoot":""}